version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7
    environment:
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: $APP_KEY
      - DB_CONNECTION: circle_test
      - MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/ci-demo
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Update apt-get
          command: sudo apt-get update
      - run:
          name: Docker php extensions install
          command: sudo docker-php-ext-install pdo_mysql
      - run:
          name: Install GD required dependencies
          command: sudo apt install -y libpng-dev
      - run:
          name: Install missing PHP Extensions
          command: |
              set +o pipefail
              composer check-platform-reqs --no-ansi | grep missing | awk '{print $1}' | sed 's|^ext-||' | \
                  xargs -I@ sh -c 'sudo -E docker-php-ext-install @'
              set -o pipefail
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: Install PHP libraries
          command: composer install -n --prefer-dist
      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}
      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      # run seeding
      - run: php artisan migrate
      - run: php artisan db:seed
      - run:
          name: Run PHPUnit
          command: vendor/bin/phpunit